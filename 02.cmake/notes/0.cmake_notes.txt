1.CMAKE_POLICY

标志哪些功能是否有效？？

2.OPTION是什么用法？
	OPTION(WITH_DEBUG "Use dbug/safemutex" OFF) 
	
	option
	Provides an option that the user can optionally select.
	
	option(<option_variable> "help string describing option"
	       [initial value])
	Provide an option for the user to select as ON or OFF. If no initial value is provided, OFF is used. If the option is already set as a normal variable then the command does nothing (see policy CMP0077).
	
	If you have options that depend on the values of other options, see the module help for CMakeDependentOption.

3.SET
SET 指令的语法是:
SET(VAR [VALUE] [CACHE TYPE DOCSTRING [FORCE]]) 现阶段，你只需要了解 SET 指令可以用来显式的定义变量即可。 比如我们用到的是SET(SRC_LIST main.c)，如果有多个源文件，也可以定义成: SET(SRC_LIST main.c t1.c t2.c)。

4.mark_as_advanced: 
Mark cmake cached variables as advanced.

  mark_as_advanced([CLEAR|FORCE] VAR VAR2 VAR...)
标记已命名的缓冲变量为 advanced.  advanced 变量 不会在cmake 图形界面中显示 除非 advanced 选项开启. 如果第一个参数是 CLEAR  advanced 变量变为unadvanced. 如果 FORCE 是第一个参数, 变量变为 advanced. 如果 FORCE 和 CLEAR 都未选定, 新变量标记为 advanced, 但是如果变量已是 advanced/non-advanced 状态, 就不会发生变化.



5.ADD_CUSTOM_TARGET
add_custom_target: 增加一个没有输出的目标，使得它总是被构建。  add_custom_target(Name [ALL] [command1 [args1...]]
                    [COMMAND command2 [args2...] ...]
                    [DEPENDS depend depend depend ... ]
                    [WORKING_DIRECTORY dir]
                    [COMMENT comment] [VERBATIM]
                    [SOURCES src1 [src2...]])
增加一个指定名字的目标，并执行指定的命令。该目标没有输出文件，总是被认为是过期的，即使是在试图用目标的名字创建一个文件。使用ADD_CUSTOM_COMMAND命令来创建一个具有依赖项的文件。默认情况下，没有任何目标会依赖该客制目标。使用ADD_DEPENDENCIES 来添加依赖项或成为别的目标的依赖项。如果指定了ALL选项，那就表明该目标会被添加到默认的构建目标，使得它每次都被运行。(该命令的名称不能命名为 ALL). 命令和参数都是可选的，如果没有指定，将会创建一个空目标。如果设置了WORKING_DIRECTORY ，那么该命令将会在指定的目录中运行。如果它是个相对路径，那它会被解析为相对于当前源码目录对应的构建目录。如果设置了 COMMENT，在构建的时候，该值会被当成信息在执行该命令之前显示。DEPENDS参数可以是文件和同一目录中的其他客制命令的输出。

如果指定了VERBATIM， 所有传递给命令的参数将会被适当地转义。建议使用该选项。

SOURCES选项指定了包含进该客制目标的额外的源文件。即使这些源文件没有构建规则，但是它们会被增加到IDE的工程文件中以方便编辑。


6.CMAKE_GENERATOR
The generator used to build the project. See cmake-generators(7).

The name of the generator that is being used to generate the build files. (e.g. Unix Makefiles, Ninja, etc.)

The value of this variable should never be modified by project code. A generator may be selected via the cmake(1) -G option, interactively in cmake-gui(1), or via the CMAKE_GENERATOR environment variable.

https://cmake.org/cmake/help/v3.16/manual/cmake-generators.7.html#manual:cmake-generators(7)

7，CMAKE_CURRENT_SOURCE_DIR
指的是当前处理的 CMakeLists.txt 所在的路径，比如上面我们提到的 src 子目录。


8.INCLUDE_DIRECTORIES
List of preprocessor include file search directories.

This property specifies the list of directories given so far to the target_include_directories() command. In addition to accepting values from that command, values may be set directly on any target using the set_property() command. A target gets its initial value for this property from the value of the INCLUDE_DIRECTORIES directory property. Both directory and target property values are adjusted by calls to the include_directories() command.

The value of this property is used by the generators to set the include paths for the compiler.

Relative paths should not be added to this property directly. Use one of the commands above instead to handle relative paths.

Contents of INCLUDE_DIRECTORIES may use cmake-generator-expressions(7) with the syntax $<...>. See the cmake-generator-expressions(7) manual for available expressions. See the cmake-buildsystem(7) manual for more on defining buildsystem properties.



9.Cmake MACRO定义
${ARGV0}--第一个参数
${ARGN}——表示所有的传入参数




----------------------------------------------------------------------------------------------------------------------

100.cmake FUNCTION list

CMAKE_POLICY
CHECK_TYPE_SIZE
CHECK_C_SOURCE_COMPILES
CHECK_CXX_SOURCE_COMPILES
MY_CHECK_C_COMPILER_FLAG
MY_CHECK_CXX_COMPILER_FLAG

# Add bundled or system zlib.
MYSQL_CHECK_ZLIB_WITH_COMPRESS()                                                                                                                                                                                                           # Add bundled yassl/taocrypt or system openssl.
MYSQL_CHECK_SSL()
# Add system/bundled editline.
MYSQL_CHECK_EDITLINE()
# Add libevent
MYSQL_CHECK_LIBEVENT()





